/// <reference types="node" />
import { Bundle } from "./Bundle";
import { FuseBox } from "./FuseBox";
import { EventEmitter } from "events";
import { SharedCustomPackage } from "./SharedCustomPackage";
import { BundleRunner } from "./BundleRunner";
import { ServerOptions } from "../devServer/Server";
export declare class BundleProducer {
    fuse: FuseBox;
    bundles: Map<string, Bundle>;
    hmrInjected: boolean;
    sharedEvents: EventEmitter;
    sharedCustomPackages: Map<string, SharedCustomPackage>;
    runner: BundleRunner;
    devServerOptions: ServerOptions;
    constructor(fuse: FuseBox);
    run(opts: any): Promise<BundleProducer>;
    register(packageName: string, opts: any): Promise<void>;
    isShared(name: string): SharedCustomPackage;
    getSharedPackage(name: string): SharedCustomPackage;
    add(name: string, bundle: Bundle): void;
    watch(): void;
    /** Trigger bundles that are affected */
    protected onChanges(settings: Map<string, RegExp>, path: string): void;
}
